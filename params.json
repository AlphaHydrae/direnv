{"name":"direnv","tagline":"Unclutter your .profile","body":"## SYNOPSIS\r\n\r\n`direnv` [options] <command> [...]\r\n\r\n## DESCRIPTION\r\n\r\nThe `direnv` project is a bash/zsh shell extension that allows you to load/unload environment variables depending on your path.\r\n\r\nIt has many uses but mine it to have project-specific settings so as to not clutter my `~/.profile`. I'm using it to specify ruby version, set AWS or SSH keys, ...\r\n\r\nThe `direnv` command-line is a proxy to the sub-commands and it work like the git(1) wrapper. You don't usually use that. Once the shell extension is loaded, most of the interaction is done in your `.envrc` files.\r\n\r\n## EXAMPLE\r\n\r\n    $ cd ~/code/my_project\r\n    $ ls\r\n    bin/ lib/ Rakefile README.md\r\n    $ echo $PATH\r\n    /usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin\r\n    $ echo PATH_add bin > .envrc\r\n    direnv: loading /Users/zimbatm/code/my_project\r\n    $ echo $PATH\r\n    /Users/zimbatm/code/my_project/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin\r\n    $ cd ..\r\n    direnv: unloading /Users/zimbatm/code/my_project\r\n    $ echo $PATH\r\n    /usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin\r\n\r\n\r\n## USAGE\r\n\r\nPlace a `.envrc` file in the folder you want and add some export(1) in it. If you cd(1) in that directory or child, the exported variables are available. If you cd(1) out of it, they are unloaded.\r\n\r\nA range of utility functions are available in the `.envrc` context and are documented in the direnv-stdlib(1) page.\r\n\r\nIf the `.envrc` file is added/changed/removed or you is no longer in the path, the environment is reloaded.\r\n\r\n## INSTALL\r\n\r\n### 1. Install the code\r\n\r\n    git clone http://github.com/zimbatm/direnv\r\n    cd direnv\r\n    make install\r\n    # or symlink bin/direnv into your $PATH\r\n\r\nFor Mac users, you can also use `brew install direnv`\r\n\r\n### 2. Add the hook for your shell\r\n\r\nAdd this line at the very end of your .bashrc or .zshrc:\r\n\r\n    eval \"$(direnv hook $0)\"\r\n\r\nMake sure it's even after rvm, git-prompt and other shell extensions that manipulate your prompt.\r\n\r\n## HOW IT WORKS\r\n\r\nThe first thing, `direnv hook` is going tell your shell to eval the output of `direnv export` before any prompt is displayed. This is the magic sauce. Notice how we didn't call `direnv-hook`. This is because `direnv` is a command dispatcher like `git`.\r\n\r\nNow when `direnv export` is executed, it checks your $PWD and parents for an .envrc file. If one is found, it loads it in bash and constructs a diff of the environment variables. It then prints the difference so that your shell can adjust, along with direnv-specific environment variables. This is how it stores it states and knows how to revert the changes when you cd to a different path.\r\n\r\nNotice that the .envrc is just a bash script from which direnv extracts the environment variables that are `export`-ed. It also sources some utility functions that may be handy to you. See the direnv-stdlib(1) man page for these.\r\n\r\nThat's about it ! I try to keep the tool simple and as an enabler.\r\n\r\n## CONTRIBUTE\r\n\r\nBug reports, contributions and forks are welcome.\r\n\r\nFor bugs, report them on <http://github.com/zimbatm/direnv/issues>\r\n\r\nOr discuss by email <direnv@librelist.com>\r\n\r\nOr if you have some cool usages of direnv that you want to share, feel free to put them in the wiki\r\n<https://github.com/zimbatm/direnv/wiki>\r\n\r\n[![Build Status](https://secure.travis-ci.org/zimbatm/direnv.png)](http://travis-ci.org/zimbatm/direnv)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}